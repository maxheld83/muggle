on:
  push:
  pull_request:
    types: [assigned, opened, synchronize, reopened]
  release:
    types: [published, created, edited]

jobs:
  build-onbuild:
    # this step is only necessary for this image
    name: Build and Push Onbuild Image
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: docker/build-push-action@v1
        with:
          # by convention, the same
          repository: ${{ github.repository }}-onbuild
          # must be pushed to docker hub, not docker.pkg.github.com because latter is private, which cannot be used in `container` field.
          dockerfile: builder.Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          # this will set "latest" if master as per https://github.com/docker/build-push-action
          tag_with_ref: true
          tag_with_sha: false
          tags: ${{ github.sha }}
          add_git_labels: true
          push: ${{ github.event_name != 'pull_request' }}
  CICD:
    needs: build-onbuild
    runs-on: ubuntu-18.04
    shell: Rscript {0}
    # github sha only necessary here
    container: ${{ github.repository }}-onbuild:${{ github.sha}}
    steps:
      - uses: actions/checkout@v2
      - name: Cache R Packages
        uses: actions/cache@v2
        with:
          # only cache the user library
          # unfortunately cannot retrieve this programmatically without a separate step read out env var or installing github action npm to image
          path: "/usr/local/lib/R/library"
          # querying dependencies against CRAN is unnecessary, because they are all locked down via RSPM
          # TODO use job.container here for other packages
          key: ${{ hashFiles('DESCRIPTION')}}
      - name: Install System Dependencies
        run: muggle::install_sysdeps()
      - name: Install R Dependencies
        run: muggle::install_deps2()
      - name: Check
        run: muggle::rcmdcheck2()
      - uses: docker/build-push-action@v1
        name: Build Dev Image
        with:
          repository: ${{ github.repository }}/dev
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          # only necessary here
          build_args: MUGGLE_BUILDER_TAG=${{ github.sha }}
          # this will set "latest" if master as per https://github.com/docker/build-push-action
          tag_with_ref: true
          # we're relying on long shas only to keep things easy
          tag_with_sha: false
          tags: ${{ github.sha }}
          add_git_labels: true
          push: ${{ github.event_name != 'pull_request' }}
